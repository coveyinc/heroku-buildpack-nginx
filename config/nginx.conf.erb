daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;
# handle SNI
    proxy_ssl_server_name on;
    # resolver needs to be set because we're using dynamic proxy_pass
    resolver 8.8.8.8;

    upstream web_server {
        server <%= ENV["WEB_SERVER_ENDPOINT"] %>:443;
    }

    upstream hfapi_server {
        server <%= ENV["HFAPI_ENDPOINT"] %>:443;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;

        location /api/contact/linkedin/check_handle {
            set $upstream hfapi_server;
            proxy_pass https://$upstream;
            proxy_ssl_name <%= ENV["HFAPI_ENDPOINT"] %>;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host <%= ENV["HFAPI_ENDPOINT"] %>;
        }

        location / {
            set $upstream web_server;
            proxy_pass https://$upstream;
            proxy_ssl_name <%= ENV["WEB_SERVER_ENDPOINT"] %>;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host <%= ENV["WEB_SERVER_ENDPOINT"] %>;
        }
    }
}
